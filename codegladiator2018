#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

bool *graph;
int *count;
int max = 1;

int getIndex(int i,int j,int c){
    return i*c + j;
}

bool * readGraph(int n){
    int u,v,i;
    bool *graph = (bool *)malloc(n*n*sizeof(bool));
    for(i=0; i<n-1; i++){
      scanf("%d %d",&u,&v);
      graph[getIndex(u-1,v-1,n)]=true;
      graph[getIndex(v-1,u-1,n)]=true;
    }
    return graph;
}

void showGraph(int n){
	int i,j;
     for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            if(graph[getIndex(i,j,n)] == true)
                printf("1 ");
            else
                printf("0 ");
        }
        puts("");
     }
}

void showCount(int n){
	int i;
     for(i=0; i<n; i++){
        printf("%d : %d\n",i+1,count[i]);
     }
}

bool visitCounterHelper(int u,int v,int n,int p){
	int i;
    if(u>n || v>n)
        return false;
    if(graph[getIndex(u-1,v-1,n)]){
        count[v-1] = count[v-1]+1;
        if(count[v-1]>max)
            max = count[v-1];
        return true;
    }
    else{
        for(i=0;i<n;i++){
            if(graph[getIndex(u-1,i,n)] && i+1!=p){
                if(visitCounterHelper(i+1,v,n,u)){
                    count[i] = count[i]+1;
                    if(count[i]>max)
                        max = count[i];
                    return true;
                }
            }
        }
        return false;
    }
}

void visitCounter(int u,int v,int n){
    count[u-1] = count[u-1]+1;
    
    if(count[u-1]>max)
        max = count[u-1];
   
    //if(graph[getIndex(u-1,v-1,n)])
        visitCounterHelper(u,v,n,-1);
}

int main(int argc, char *a[]) {
	int n,m,i;

    scanf("%d %d",&n,&m);
    count = (int *)malloc(n*sizeof(int));
	graph = readGraph(n);
	
	//showGraph(n);
	
	for(i=0;i<m;i++){
	    int a,b;
	    scanf("%d %d",&a,&b);
	    visitCounter(a,b,n);
	}
	printf("%d\n",max);

	//puts("===============");
	//showCount(n);
	
	return 0;
}
